// CustomValue.def
/*
The CUSTOM_ONE_D_TYPE(CUSTOM_NAME, DATA_TYPE, DATA_WIDTH, DATA_CLASS, MIN_VALUE,
MAX_VALUE) macro is unrolled in Basic.hpp, Graph.hpp, Oeprator.cpp, Value.hpp,
Value.cpp
*/
#ifndef CUSTOM_ONE_D_TYPE
#define CUSTOM_ONE_D_TYPE(...)
#endif

// unsigned integer
CUSTOM_ONE_D_TYPE(UInt8, uint8_t, 8, UNSIGNED_INT, 0, +100)
CUSTOM_ONE_D_TYPE(UInt16, uint16_t, 16, UNSIGNED_INT, 0, +10000)
CUSTOM_ONE_D_TYPE(UInt32, uint32_t, 32, UNSIGNED_INT, 0, +10000000)
CUSTOM_ONE_D_TYPE(UInt64, uint64_t, 64, UNSIGNED_INT, 0, +10000000)

// signed integer
CUSTOM_ONE_D_TYPE(Int8, int8_t, 8, SIGNED_INT, -100, +100)
CUSTOM_ONE_D_TYPE(Int16, int16_t, 16, SIGNED_INT, -10000, +10000)
CUSTOM_ONE_D_TYPE(Int32, int32_t, 32, SIGNED_INT, -10000000, +10000000)
CUSTOM_ONE_D_TYPE(Int64, int64_t, 64, SIGNED_INT, -10000000, +10000000)

// boolean
CUSTOM_ONE_D_TYPE(Bool, int8_t, 8, BOOL, 0, 1)

// softfloat
CUSTOM_ONE_D_TYPE(Float16, float16_t, 16, FLOAT, 0, +20000)
CUSTOM_ONE_D_TYPE(Float32, float32_t, 32, FLOAT, 0, +20000000)
CUSTOM_ONE_D_TYPE(Float64, float64_t, 64, FLOAT, 0, +20000000)

/*
The CUSTOM_SCALAR_TYPE(CUSTOM_NAME, DATA_TYPE, DATA_WIDTH, DATA_CLASS,
DISTRIBUTION_TYPE, MIN_VALUE, MAX_VALUE) macro is unrolled in Basic.hpp,
Graph.hpp, Oeprator.cpp, Value.hpp, Value.cpp
*/
#ifndef CUSTOM_SCALAR_TYPE
#define CUSTOM_SCALAR_TYPE(...)
#endif

// unsigned integer
CUSTOM_SCALAR_TYPE(UInt8, uint8_t, 8, UNSIGNED_INT, 0, +100)
CUSTOM_SCALAR_TYPE(UInt16, uint16_t, 16, UNSIGNED_INT, 0, +10000)
CUSTOM_SCALAR_TYPE(UInt32, uint32_t, 32, UNSIGNED_INT, 0, +10000000)
CUSTOM_SCALAR_TYPE(UInt64, uint64_t, 64, UNSIGNED_INT, 0, +10000000)

// signed integer
CUSTOM_SCALAR_TYPE(Int8, int8_t, 8, SIGNED_INT, -100, +100)
CUSTOM_SCALAR_TYPE(Int16, int16_t, 16, SIGNED_INT, -10000, +10000)
CUSTOM_SCALAR_TYPE(Int32, int32_t, 32, SIGNED_INT, -10000000, +10000000)
CUSTOM_SCALAR_TYPE(Int64, int64_t, 64, SIGNED_INT, -10000000, +10000000)

CUSTOM_SCALAR_TYPE(Float16, float16_t, 16, FLOAT, 0, +20000)
CUSTOM_SCALAR_TYPE(Float32, float32_t, 32, FLOAT, 0, +20000000)
CUSTOM_SCALAR_TYPE(Float64, float64_t, 64, FLOAT, 0, +20000000)

// machine dependent
CUSTOM_SCALAR_TYPE(IntXLen, ptrdiff_t, 32, SIGNED_INT, 0, 10000000)
CUSTOM_SCALAR_TYPE(UIntXLen, size_t, 32, UNSIGNED_INT, 0, 10000000)

// rounding mode
CUSTOM_SCALAR_TYPE(UIntStatus, uint8_t, 8, CONSTANT_INT, 0, 3) 